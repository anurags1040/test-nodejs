version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@2.4.1
  helm: circleci/helm@2.0.1
executors:
  my-custom-executor:
    docker:
      - image: cimg/gcp:2022.09
        auth:
          # ensure you have first added these secrets
          # visit app.circleci.com/settings/project/github/crunchyroll/ctp-gke-example-ts/environment-variables
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD
jobs:
  helm-deployment:
    environment:
      DOCKER_REPO: ctp-artifact-registry-dev
      IMAGE_NAME: ctp-vod-dev-image
      IMAGE_NAME_2: ctp-gcsproxy-dev-image
      HELM_RELEASE_NAME: test
      VERSION_PREFIX: 0.1
      CHART_NAME: circleci-vod-chart
      GCP_PROJECT: vi-vod-dev-4b00
      GKE_CLUSTER: vod-gke-dev-us-west
      GKE_REGION: us-west1
    executor: my-custom-executor
    steps:
      - gcp-cli/initialize
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - helm/install-helm-client
      - add_ssh_keys:
          fingerprints:
            - "02:ca:bd:ba:f7:a4:dd:4d:d7:d2:93:65:df:0c:01:a0"
      - run:
          name: Setup Env Variables
          command: |
            echo 'export TAG="${VERSION_PREFIX}.${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
            echo 'export TAG_2="${VERSION_PREFIX}.${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
            echo 'export RELEASE_NAME="${HELM_RELEASE_NAME}"' >> "$BASH_ENV"
            echo 'export CHART_NAME="${CHART_NAME}"' >> "$BASH_ENV"
            echo 'export CHART_REPO_NAME="${CIRCLE_PROJECT_REPONAME}"' >> "$BASH_ENV"
      - run:
          name: Update Helm Chart
          command: |
            git clone "https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git"
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME checkout $CIRCLE_BRANCH
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME config --global user.email "circleci@crunchyroll.com"
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME config --global user.name "$CIRCLE_JOB"
            yq -i '.version=strenv(TAG)' /home/circleci/project/$CIRCLE_PROJECT_REPONAME/charts/$CHART_NAME/Chart.yaml
            yq -i '.appVersion=strenv(TAG)' /home/circleci/project/$CIRCLE_PROJECT_REPONAME/charts/$CHART_NAME/Chart.yaml
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME add .
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME commit -m "[skip ci] Helm chart version update"
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME push
  build-image:
    environment:
      DOCKER_REPO: ctp-artifact-registry-dev
      IMAGE_NAME: ctp-vod-dev-image
      IMAGE_NAME_2: ctp-gcsproxy-dev-image
      VERSION_PREFIX: 0.1
      GCP_PROJECT: vi-vod-dev-4b00
      GKE_CLUSTER: vod-gke-dev-us-west
      GKE_REGION: us-west1
    executor: my-custom-executor
    steps:
      - gcp-cli/initialize
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - helm/install-helm-client
      - add_ssh_keys:
          fingerprints:
            - "02:ca:bd:ba:f7:a4:dd:4d:d7:d2:93:65:df:0c:01:a0"
      - run:
          name: Setup Env Variables
          command: |
            echo 'export TAG="${VERSION_PREFIX}.${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
            echo 'export TAG_2="${VERSION_PREFIX}.${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
            echo 'export RELEASE_NAME="${HELM_RELEASE_NAME}"' >> "$BASH_ENV"
            echo 'export CHART_NAME="${CHART_NAME}"' >> "$BASH_ENV"
            echo 'export CHART_REPO_NAME="${CIRCLE_PROJECT_REPONAME}"' >> "$BASH_ENV"      
      - run:
          name: Build and push container image
          command: |
            gcloud auth configure-docker us-docker.pkg.dev
            # docker build --build-arg NPM_TOKEN="${NPM_TOKEN}" --no-cache --progress=plain -t us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME:latest -t us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME:$TAG .
            docker build -f /home/circleci/project/Dockerfile-1 --no-cache --progress=plain -t us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME:latest -t us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME:$TAG .
            docker push us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME:$TAG
            docker push us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME:latest
      - run:
          name: Build and push container image 2
          command: |
            gcloud auth configure-docker us-docker.pkg.dev
            docker build -f /home/circleci/project/Dockerfile-gcs --no-cache --progress=plain -t us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME_2:latest -t us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME_2:$TAG_2 .
            docker push us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME_2:$TAG_2
            docker push us-docker.pkg.dev/$GCP_PROJECT/$DOCKER_REPO/$IMAGE_NAME_2:latest
  deploy-to-kubernetes:
    circleci_ip_ranges: true
    environment:
      DOCKER_REPO: ctp-artifact-registry-dev
      IMAGE_NAME: ctp-gke-example-ts
      HELM_RELEASE_NAME: test
      CHART_NAME: circleci-vod-chart
      VERSION_PREFIX: 0.1
      GCP_PROJECT: vi-vod-dev-4b00
      GKE_CLUSTER: vod-gke-dev-us-west
      GKE_REGION: us-west1
    executor: my-custom-executor
    steps:
      - gcp-cli/initialize
      - checkout
      - helm/install-helm-client
      - add_ssh_keys:
          fingerprints: 
            - "02:ca:bd:ba:f7:a4:dd:4d:d7:d2:93:65:df:0c:01:a0"
      - run:     
          name: Setup Env Variables
          command: |
            echo 'export TAG="${VERSION_PREFIX}.${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
            echo 'export TAG_2="${VERSION_PREFIX}.${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
            echo 'export RELEASE_NAME="${HELM_RELEASE_NAME}"' >> "$BASH_ENV"
            echo 'export CHART_NAME="${CHART_NAME}"' >> "$BASH_ENV"
            echo 'export CHART_REPO_NAME="${CIRCLE_PROJECT_REPONAME}"' >> "$BASH_ENV"      
      - run:
          name: Connect to Kubernetes Cluster
          command: |
            gcloud auth configure-docker us-docker.pkg.dev
            gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION --project $GCP_PROJECT
      - run:
          name: Install/Update Helm Deployment
          command: |
            git clone "https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git"
            git -C /home/circleci/project/$CIRCLE_PROJECT_REPONAME checkout $CIRCLE_BRANCH
            helm upgrade $RELEASE_NAME /home/circleci/project/$CHART_REPO_NAME/charts/$CHART_NAME -f /home/circleci/project/$CHART_REPO_NAME/charts/$CHART_NAME/values.yaml      

workflows:
  my-custom-workflow:
    jobs:
      - helm-deployment
      - build-image:
          requires:
            - helm-deployment
      - deploy-to-kubernetes:
          requires:
            - build-image
